<UserControl x:Class="SophiApp.Controls.ComboListBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SophiApp.Controls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d">

    <UserControl.Resources>        
        <Style TargetType="{x:Type Grid}" x:Key="Style.Grid.Button.Wrapper">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>
        <Style TargetType="{x:Type Popup}">
            <Setter Property="Placement" Value="Bottom"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="PopupAnimation" Value="Slide"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Setter Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"/>            
        </Style>
        <Style TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="CornerRadius" Value="1"/>            
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Element.Border.Light1}"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Grid.Column" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Text" Value="{Binding Path=SelectedItem.Content, ElementName=ListBoxContent, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>
        <!--<Style TargetType="{x:Type ListBoxItem}">            
            <Setter Property="Template">                
                <Setter.Value>
                    <ControlTemplate>
                        <Grid ShowGridLines="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding Path=ItemsProperty, RelativeSource={RelativeSource AncestorType={x:Type local:ComboListBox}}}" Foreground="Red"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style TargetType="{x:Type local:ComboListBox}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
            <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Foreground}" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="156"/>
            <Setter Property="FontSize" Value="14"/>            
        </Style>
    </UserControl.Resources>
    <UserControl.Template>
        <ControlTemplate>
            <Border x:Name="BorderContent" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="32"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock/>
                    <Button x:Name="ButtonOpenPopup" Click="ButtonOpenPopup_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Grid Style="{StaticResource Style.Grid.Button.Wrapper}">
                                    <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center"
                                             Width="12" Height="12">
                                        <Canvas Width="12" Height="12">
                                            <Path Fill="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Data="M6 8.09766L11.3613 2.73633L11.8887 3.26367L6 9.15234L0.111328 3.26367L0.638672 2.73633L6 8.09766Z"/>
                                        </Canvas>
                                    </Viewbox>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="ButtonClosePopup" Click="ButtonClosePopup_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Grid Style="{StaticResource Style.Grid.Button.Wrapper}">
                                    <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center"
                                             Width="12" Height="12">
                                        <Canvas Width="12" Height="12">
                                            <Path Fill="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Data="M6 3.90234L11.3613 9.26367L11.8887 8.73633L6 2.84766L0.111328 8.73633L0.638672 9.26367L6 3.90234Z"/>
                                        </Canvas>
                                    </Viewbox>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Popup x:Name="Popup" OverridesDefaultStyle="True">                        
                        <Border x:Name="BorderPopup">
                            <ListBox x:Name="ListBoxContent" ItemsSource="{Binding Path=ItemsSource, RelativeSource={RelativeSource TemplatedParent}}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid ShowGridLines="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="32"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="1" Text="{Binding Id}" Foreground="Red"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>                
                <Trigger SourceName="Popup" Property="IsOpen" Value="True">
                    <Setter TargetName="ButtonOpenPopup" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="BorderContent" Property="BorderThickness" Value="1, 1, 1, 0"/>
                    <Setter TargetName="BorderPopup" Property="BorderThickness" Value="1, 0, 1, 1"/>
                    <Setter TargetName="Popup" Property="HorizontalOffset" Value="-1"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="IsOpen" Value="False">
                    <Setter TargetName="ButtonClosePopup" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="BorderContent" Property="BorderThickness" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>
