<UserControl x:Class="SophiApp.Views.ViewPersonalization"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:SophiApp.Converters"
             xmlns:controls="clr-namespace:SophiApp.Controls"
             xmlns:models="clr-namespace:SophiApp.Models"
             xmlns:local="clr-namespace:SophiApp.Views"
             mc:Ignorable="d"
             IsVisibleChanged="ViewPersonalization_IsVisibleChanged">

    <UserControl.Resources>
        <CollectionViewSource x:Key="TextedElementsCollection" Source="{Binding TextedElements}" Filter="TextedElementsFilter" />
        <converters:BoolToVisibility x:Key="BoolToVisibilityConverter" />
        <Style TargetType="{x:Type ItemsControl}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
        </Style>
        <Style TargetType="{x:Type local:ViewPersonalization}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="{DynamicResource Brush.View.Background}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Foreground}" />
            <Setter Property="Tag" Value="{StaticResource Tags.View.Personalization}" />
            <Setter Property="IsHitTestVisible" Value="{Binding ViewsHitTest, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
    </UserControl.Resources>
    <UserControl.Template>
        <ControlTemplate>
            <Grid Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}">
                <ScrollViewer x:Name="ScrollViewerContent" Style="{DynamicResource ViewScrollStyle}">
                    <ItemsControl ItemsSource="{Binding Source={StaticResource TextedElementsCollection}}">
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type models:AdvancedRadioGroup}">
                                <controls:AdvancedRadioGroup IsEnabled="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                                             Command="{Binding Path=DataContext.RadioGroupClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}}"
                                                             Visibility="{Binding Path=DataContext.AdvancedSettingsVisibility, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                             Margin="20, 10, 0, 5" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:AdvancedSwitch}">
                                <controls:AdvancedSwitch Header="{Binding Header, UpdateSourceTrigger=PropertyChanged}"
                                                         Description="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                                         Command="{Binding Path=DataContext.TextedElementClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}}"
                                                         Id="{Binding Id}"
                                                         IsEnabled="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                                         IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                         Visibility="{Binding Path=DataContext.AdvancedSettingsVisibility, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                         Margin="20, 10, 0, 5" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:Switch}">
                                <controls:Switch Header="{Binding Header, UpdateSourceTrigger=PropertyChanged}"
                                                 Description="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                                 Command="{Binding Path=DataContext.TextedElementClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}}"
                                                 Id="{Binding Id}"
                                                 IsEnabled="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                                 IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                 Margin="20, 10, 0, 5" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:RadioGroup}">
                                <controls:RadioGroup IsEnabled="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                                     Command="{Binding Path=DataContext.RadioGroupClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}}"
                                                     Margin="20, 10, 0, 5" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:CheckBox}">
                                <controls:CheckBox Command="{Binding Path=DataContext.TextedElementClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}}"
                                                   Id="{Binding Id}"
                                                   IsEnabled="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                                   IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                   Margin="20, 10, 0, 5" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:ExpandingGroup}">
                                <controls:ExpandingGroup IsEnabled="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                                         Command="{Binding Path=DataContext.TextedElementClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ViewPersonalization}}}"
                                                         Margin="20, 10, 0, 5" />
                            </DataTemplate>
                        </ItemsControl.Resources>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding VisibleViewByTag, UpdateSourceTrigger=PropertyChanged}" Value="{StaticResource Tags.View.Personalization}">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <Trigger Property="Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                    From="0, 10, 0, 0"
                                                    To="0, 0, 0, 0"
                                                    Duration="0:0:01"
                                                    SpeedRatio="10" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>