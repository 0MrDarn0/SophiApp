<Window
    x:Class="SophiApp.MainWindow"
    xmlns:controls="clr-namespace:SophiApp.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:SophiApp.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:SophiApp.Views"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    x:Name="Window"
    Closed="Window_Closed"
    controls:AdvancedRadioGroup.MouseEnter="TextedElement_MouseEnter"
    controls:AdvancedRadioGroup.MouseLeave="TextedElement_MouseLeave"
    controls:AdvancedSwitch.MouseEnter="TextedElement_MouseEnter"
    controls:AdvancedSwitch.MouseLeave="TextedElement_MouseLeave"
    controls:ButtonGroup.MouseEnter="TextedElement_MouseEnter"
    controls:ButtonGroup.MouseLeave="TextedElement_MouseLeave"
    controls:CheckBox.MouseEnter="TextedElement_MouseEnter"
    controls:CheckBox.MouseLeave="TextedElement_MouseLeave"
    controls:ExpandingGroup.MouseEnter="TextedElement_MouseEnter"
    controls:ExpandingGroup.MouseLeave="TextedElement_MouseLeave"
    controls:IconFolderCheckBox.MouseEnter="TextedElement_MouseEnter"
    controls:IconFolderCheckBox.MouseLeave="TextedElement_MouseLeave"
    controls:IconWinCheckBox.MouseEnter="TextedElement_MouseEnter"
    controls:IconWinCheckBox.MouseLeave="TextedElement_MouseLeave"
    controls:RadioButton.MouseEnter="TextedElement_MouseEnter"
    controls:RadioButton.MouseLeave="TextedElement_MouseLeave"
    controls:RadioGroup.MouseEnter="TextedElement_MouseEnter"
    controls:RadioGroup.MouseLeave="TextedElement_MouseLeave"
    controls:SimpleCheckBox.MouseEnter="TextedElement_MouseEnter"
    controls:SimpleCheckBox.MouseLeave="TextedElement_MouseLeave"
    controls:Switch.MouseEnter="TextedElement_MouseEnter"
    controls:Switch.MouseLeave="TextedElement_MouseLeave"
    controls:TitleLeft.MouseLeftButtonDown="Title_MouseLeftButtonDown"
    controls:TitleRight.CloseButtonClicked="Title_CloseButtonClicked"
    controls:TitleRight.MinimizeButtonClicked="Title_MinimizeButtonClicked"
    controls:TitleRight.MinMaxButtonClicked="Title_MinMaxButtonClicked"
    controls:TitleRight.MouseLeftButtonDown="Title_MouseLeftButtonDown"
    Loaded="Window_Loaded"
    SizeChanged="Window_SizeChanged"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="TaskBarItemInfo" />
    </Window.TaskbarItemInfo>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            GlassFrameThickness="0"
            ResizeBorderThickness="3" />
    </WindowChrome.WindowChrome>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="AllowsTransparency" Value="False" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="ResizeMode" Value="CanResize" />
            <Setter Property="ShowInTaskbar" Value="True" />
            <Setter Property="MinHeight" Value="615" />
            <Setter Property="MinWidth" Value="1074" />
            <Setter Property="Height" Value="615" />
            <Setter Property="Width" Value="1074" />
            <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Foreground}" />
            <Setter Property="Title">
                <Setter.Value>
                    <MultiBinding StringFormat="{}{0} {1} beta 2">
                        <Binding Path="AppName" />
                        <Binding Path="Version" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Window.Resources>
        <Thickness x:Key="MarginViewConditionsText" Left="5" Top="0" Right="5" Bottom="10" />
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Foreground}" />
            <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid x:Name="GridContent" Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock
                                Margin="10,3,10,3"
                                FontSize="14"
                                Style="{DynamicResource SmallText}"
                                Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="GridContent" Property="Background" Value="{DynamicResource Brush.Window.Element.Hover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HasDropShadow" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border
                            Padding="0"
                            Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderBrush="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="1">
                            <StackPanel ClipToBounds="True" IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ViewScrollStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="CanContentScroll" Value="False" />
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Foreground}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="{DynamicResource Brush.View.Background}" />
        </Style>
        <Style x:Key="SmallText" TargetType="{x:Type TextBlock}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
            <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style x:Key="NormalText" TargetType="{x:Type TextBlock}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
            <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="BoldText" BasedOn="{StaticResource NormalText}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
            <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="FontSize" Value="28" />
        </Style>
        <Style x:Key="SubHeaderText" TargetType="{x:Type TextBlock}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
            <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="FontSize" Value="22" />
        </Style>
        <Style x:Key="Style.Panel.Description" TargetType="{x:Type StackPanel}">
            <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}" />
            <Setter Property="Grid.Column" Value="1" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <!--  Window Title Row  -->
            <RowDefinition Height="*" />
            <!--  Window Content Row  -->
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <!--  Window Title Grid  -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <!--  Hamburger Title Column  -->
                <ColumnDefinition Width="*" />
                <!--  Views Title Column  -->
            </Grid.ColumnDefinitions>
            <controls:TitleLeft Grid.Column="0" />
            <controls:TitleRight Grid.Column="1" />
        </Grid>

        <Grid Grid.Row="1" Background="{DynamicResource Brush.View.Background}">
            <!--  Window Content Grid  -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <!--  Hamburger Column  -->
                <ColumnDefinition Width="*" />
                <!--  Column For Views Without Description  -->
            </Grid.ColumnDefinitions>
            <controls:HamburgerMenu Grid.Column="0" />
            <views:ViewLoading Grid.Column="1" Panel.ZIndex="30" />
            <views:ViewSettings Grid.Column="1" Panel.ZIndex="20" />

            <views:ViewConditionsTemplate x:Name="ViewConditionsOsBuildVersion" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.OsBuildVersion}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.OsBuildVersion.NotCompatible}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <TextBlock Text="{DynamicResource Conditions.OsBuildVersion.Supported}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <TextBlock Text="{DynamicResource Conditions.OsBuildVersion.RunUpdate}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <controls:CommandButton
                                Margin="0, 10, 0, 0"
                                HorizontalAlignment="Center"
                                Command="{Binding OpenUpdateCenterWindowCommand}"
                                Text="{DynamicResource Conditions.WindowsUpdateCenter.Open}" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsOsUpdateBuildRevision" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.UpdateBuildRevision}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.OsUpdateBuildRevision.Supported}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <TextBlock Text="{DynamicResource Conditions.OsUpdateBuildRevision.LowerVersion}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <TextBlock Text="{DynamicResource Conditions.OsUpdateBuildRevision.RunUpdate}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <controls:CommandButton
                                Margin="0, 10, 0, 0"
                                HorizontalAlignment="Center"
                                Command="{Binding OpenUpdateCenterWindowCommand}"
                                Text="{DynamicResource Conditions.WindowsUpdateCenter.Open}" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsIsSingleSession" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.IsSingleSession}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.IsSingleSession.Login}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsLoggedUserIsAdmin" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.LoggedUserAdmin}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.LoggedUserAdmin}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsOneInstanceOnly" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.OneInstanceOnly}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.OneInstanceOnly}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsOsIsInfected"  Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.OsNotInfected}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.OsIsInfected}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <controls:ActorLink Margin="{StaticResource MarginViewConditionsText}"
                                            HorizontalAlignment="Center"
                                            Actor="{DynamicResource Conditions.OsIsInfected.Link}"
                                            Command="{Binding HyperLinkClickedCommand}"
                                            CommandParameter="{DynamicResource Conditions.OsIsInfected.Link}"
                                            Role="{DynamicResource Conditions.OsIsInfected.More}" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsWindows10DebloaterNotUsed" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.Windows10DebloaterNotUsed}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.Windows10DebloaterNotUsed.StabilityCompromised}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <TextBlock Text="{DynamicResource Conditions.Windows10DebloaterNotUsed.SycnexScript}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <TextBlock Text="{DynamicResource Conditions.Windows10DebloaterNotUsed.ReinstallOs}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsNoNewVersion" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.NoNewVersion}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Conditions.NoNewVersion.HasNew}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <TextBlock Text="{DynamicResource Conditions.NoNewVersion.DownloadFixed}" Style="{StaticResource BoldText}" Margin="{StaticResource MarginViewConditionsText}" HorizontalAlignment="Center" />
                        <controls:CommandButton
                                Margin="0, 10, 0, 0"
                                HorizontalAlignment="Center"
                                Command="{Binding HyperLinkClickedCommand}"
                                CommandParameter="{x:Static helpers:AppHelper.GitHubRepo}"
                                Text="{DynamicResource Conditions.NoNewVersion.OpenGitHub}" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>
            <views:ViewConditionsTemplate x:Name="ViewConditionsSomethingWrong" Grid.Column="1" Panel.ZIndex="20" Tag="{StaticResource Tags.Conditions.SomethingWrong}">
                <views:ViewConditionsTemplate.TextContent>
                    <StackPanel>
                        <TextBlock Text="{Binding Path=ConditionsHelperError}"
                                   Style="{StaticResource BoldText}"
                                   Margin="{StaticResource MarginViewConditionsText}"
                                   TextWrapping="Wrap"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                        <controls:CommandButton
                                Margin="0, 10, 0, 0"
                                HorizontalAlignment="Left"
                                Command="{Binding SaveDebugLogCommand}"
                                Text="{DynamicResource Localization.Settings.Debug.Save}" />
                    </StackPanel>
                </views:ViewConditionsTemplate.TextContent>
            </views:ViewConditionsTemplate>

            <Grid Grid.Column="1" Panel.ZIndex="10">
                <!--  Wrapper Grid For Views With Description and Info Panel  -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <!--  Views and Info Panel Column  -->
                    <ColumnDefinition Width="2*" />
                    <!--  Description Column  -->
                </Grid.ColumnDefinitions>
                <StackPanel Style="{DynamicResource Style.Panel.Description}">
                    <!--  Description Panel  -->
                    <TextBlock
                            Margin="5"
                            Style="{DynamicResource NormalText}"
                            Text="{Binding ElementName=Window, Path=Description}"
                            TextWrapping="Wrap" />
                </StackPanel>

                <Grid Grid.Column="0">
                    <!--  Grid For Views Description and Info Panel  -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <!--  Views Row  -->
                        <RowDefinition Height="52" />
                        <!--  Info Panel Row  -->
                    </Grid.RowDefinitions>
                    <views:ViewUwpApps Grid.Row="0" />
                    <views:ViewTaskSheduler Grid.Row="0" />
                    <views:ViewSystem Grid.Row="0" />
                    <views:ViewStartMenu Grid.Row="0" />
                    <views:ViewSecurity Grid.Row="0" />
                    <views:ViewSearch Grid.Row="0" />
                    <views:ViewPrivacy Grid.Row="0" />
                    <views:ViewPersonalization Grid.Row="0" />
                    <views:ViewGames Grid.Row="0" />
                    <views:ViewContextMenu Grid.Row="0" />

                    <controls:ChangesPanel Grid.Row="1" />
                    <controls:LoadingPanel Grid.Row="1" />
                    <controls:RestartPanel Grid.Row="1"/>

                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
