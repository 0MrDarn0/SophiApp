<UserControl x:Class="SophiApp.Controls.ItemsList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:SophiApp.Converters"
             xmlns:local="clr-namespace:SophiApp.Controls"
             xmlns:models="clr-namespace:SophiApp.Models"
             xmlns:views="clr-namespace:SophiApp.Views"
             mc:Ignorable="d">

    <UserControl.Resources>
        <CollectionViewSource x:Key="UIModelsCollection"
                              Source="{Binding DataContext.UIModels, RelativeSource={RelativeSource AncestorType={x:Type views:ViewContent}}}"
                              Filter="InContainerFilter" />
        <converters:BoolToVisibility x:Key="BoolToVisibilityConverter" />
        <Storyboard x:Key="StoryboardExpanderClose">
            <!--<DoubleAnimation Storyboard.TargetName="PanelExpander"
                             Storyboard.TargetProperty="Opacity"
                             From="1.0"
                             To="0.0"
                             Duration="0:0:5" />-->

            <!--<DoubleAnimation Storyboard.TargetName="PanelExpander"
                             Storyboard.TargetProperty="RenderTransform.ScaleX"
                             From="1.0"
                             To="0.0"
                             Duration="0:0:1" />-->

            <DoubleAnimation Storyboard.TargetName="PanelExpander"
                             Storyboard.TargetProperty="LayoutTransform.ScaleY"
                             From="1.0"
                             To="0.0"
                             Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="StoryboardExpanderOpen">
            <DoubleAnimation Storyboard.TargetName="PanelExpander"
                             Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                             From="0"
                             To="1"
                             Duration="0:0:01" />
        </Storyboard>
        <Style TargetType="{x:Type Viewbox}">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
        </Style>
        <Style TargetType="{x:Type Canvas}">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
        </Style>
        <Style TargetType="{x:Type Grid}" x:Key="Style.Grid.Expander.Wrapper">
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>
        <Style TargetType="{x:Type Grid}" x:Key="Style.Grid.Expander">
            <Setter Property="Grid.Row" Value="1" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleY="1.0" ScaleX="1.0" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
            <Setter Property="Data" Value="M15.1484 12.3516L15.8516 11.6484L8 3.79688L0.148438 11.6484L0.851562 12.3516L8 5.20312L15.1484 12.3516Z" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="Style.TextBlock.Header">
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Text" Value="{Binding Header, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="Margin" Value="0, 0, 20, 0" />
        </Style>
        <Style TargetType="{x:Type local:ItemsList}">
            <Setter Property="MinWidth" Value="450" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Margin" Value="0, 0, 0, 20" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
            <Setter Property="Background" Value="{DynamicResource Brush.View.Background}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Foreground}" />
        </Style>
    </UserControl.Resources>
    <UserControl.Template>
        <ControlTemplate>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{DynamicResource Style.TextBlock.Header}" />
                    <Grid Style="{StaticResource Style.Grid.Expander.Wrapper}"
                          MouseLeftButtonDown="ExpanderWrapper_MouseLeftButtonDown">
                        <Viewbox>
                            <Canvas>
                                <Path />
                            </Canvas>
                        </Viewbox>
                    </Grid>
                </Grid>
                <Grid x:Name="PanelExpander" Style="{StaticResource Style.Grid.Expander}" Background="RosyBrown">
                    <ItemsControl ItemsSource="{Binding Source={StaticResource UIModelsCollection}}">
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type models:SwitchModel}">
                                <local:Switch />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:CheckBoxModel}">
                                <local:CheckBox />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type models:RoundCheckBoxModel}">
                                <local:RoundCheckBox />
                            </DataTemplate>
                        </ItemsControl.Resources>
                    </ItemsControl>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="AnimationExpanderClose" Storyboard="{StaticResource StoryboardExpanderClose}" />
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="AnimationExpanderClose" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="AnimationExpanderOpen" Storyboard="{StaticResource StoryboardExpanderOpen}" />
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="AnimationExpanderOpen" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>